#!/usr/bin/python3

import subprocess


def sample_output(cmd, max_lines=None, max_line_length=None):
    cmd_fmt = cmd.lstrip("./")

    res = subprocess.run(cmd, universal_newlines=True, capture_output=True, check=True, shell=True)
    print("```text")
    print(f"$ {cmd_fmt}")
    for idx, line in enumerate(res.stdout.splitlines()):
        if max_lines is not None and idx >= max_lines:
            print("…")
            break
        if max_line_length is not None and len(line) > max_line_length:
            line = line[:max_line_length] + "…"
        print(line)
    print("```")


print("""# `a38tool`

General command line help:
""")

sample_output("./a38tool --help")

print("""
### Convert a fattura to JSON
""")

sample_output("./a38tool json --help")

print("""
Example:
""")

sample_output("./a38tool json doc/IT01234567890_FPR02.xml", max_lines=6)

print("""
Use `--indent=no` to output a json per line, making it easy to separate reparse
a group of JSON fatture:
""")

sample_output("./a38tool json --indent=no doc/*.xml", max_lines=3, max_line_length=40)

print("""
### Extract XML from a `.p7m` signed fattura
""")

sample_output("./a38tool xml --help")

print("""
### Generate Python code

You can convert a fattura to Python code: this is a quick way to start writing
a software that generates fatture similar to an existing one.
""")

sample_output("./a38tool python --help")

print("""
Example:
""")

sample_output("./a38tool python doc/IT01234567890_FPR02.xml", max_lines=6, max_line_length=70)
