#!/usr/bin/python3
import argparse
import logging
import sys
import requests
import re
import urllib.parse
import os
from lxml import etree as ET

log = logging.getLogger("download_docs")

INDEX_URL = "https://www.fatturapa.gov.it/export/fatturazione/it/normativa/f-2.htm"

DOCS = [
    r"/Schema_del_file_xml.+\.xsd$",
    r"/Specifiche_tecniche.+\.pdf$",
    r"/Rappresentazione_tabellare_del_tracciato.+\.(?:pdf|xls)$",
    r"/fatturaPA.+\.xsl$",
    r"/fatturaordinaria.+\.xsl$"
    r"/changelog_formato\.pdf$",
    r"/Suggerimenti_Compilazione.+\.pdf$",
    r"/fatturapa.+\.xsl$",
    r"/fatturaordinaria.+\.xsl$",
]

EXAMPLES = [
    r"/IT01234567890_FP.+\.xml",
]


def get_urls():
    index = requests.get(INDEX_URL)
    parser = ET.XMLParser(recover=True)
    root = ET.fromstring(index.text, parser)
    re_docs = [re.compile(r) for r in DOCS]
    re_examples = [re.compile(r) for r in EXAMPLES]
    for li in root.iter("li"):
        links = []
        for a in li.iter("a"):
            href = a.attrib.get("href")
            if href is None:
                continue
            # There seem to be various wrong links to this file, so we ignore
            # them
            if "IT01234567890_11111" in href:
                continue
            links.append(href)
        for l in links:
            for r in re_docs:
                if r.search(l):
                    yield {"type": "doc", "href": l}
            for r in re_examples:
                if r.search(l):
                    yield {"type": "example", "href": l, "title": li.text}


def download():
    for el in get_urls():
        url = urllib.parse.urljoin(INDEX_URL, el["href"])
        parsed = urllib.parse.urlparse(url)
        filename = os.path.basename(parsed.path)
        if el["type"] == "doc":
            dest = os.path.join("doc", filename)
        elif el["type"] == "example":
            dest = os.path.join("doc", filename)
        if os.path.exists(dest):
            log.info("%s: already downloaded", dest)
            continue
        res = requests.get(url, stream=True)
        with open(dest, 'wb') as fd:
            for chunk in res.iter_content(chunk_size=128):
                fd.write(chunk)
        log.info("%s: downloading", dest)


class Fail(Exception):
    pass


def main():
    parser = argparse.ArgumentParser(description="download documents and examples from www.fatturapa.gov.it")
    parser.add_argument("--verbose", "-v", action="store_true", help="verbose output")
    parser.add_argument("--debug", action="store_true", help="debug output")

    args = parser.parse_args()

    log_format = "%(asctime)-15s %(levelname)s %(message)s"
    level = logging.WARN
    if args.debug:
        level = logging.DEBUG
    elif args.verbose:
        level = logging.INFO
    logging.basicConfig(level=level, stream=sys.stderr, format=log_format)

    download()


if __name__ == "__main__":
    try:
        main()
    except Fail as e:
        print(e, file=sys.stderr)
        sys.exit(1)
    except Exception:
        log.exception("uncaught exception")
